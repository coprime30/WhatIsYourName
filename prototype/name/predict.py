from tensorflow.keras import models
import numpy as np
import cv2
from gtts import gTTS


def predict_image(path):
    model_url = 'media/Model/Resnet50v2_ai_tm_lr_0.0001.h5'
    # model_url = 'media/Model/Resnet50v2_ai_lr_0.0001.h5'
    # model_url = 'media/Model/Resnet50v2_ai_lr_0.001.h5'
    model = models.load_model(model_url, compile=False)

    img = cv2.imread(path, 1)
    img = cv2.resize(img, (256, 256))
    cv2.imwrite(path, img)

    img_array = np.asarray(img)  # dtype이 다른 경우에만 복사한다.
    data = np.ndarray(shape=(1, 256, 256, 3), dtype=np.float32)

    normalized_img_array = (img_array.astype(np.float32) / 127.0) - 1
    data[0] = normalized_img_array

    '''
    0 동아 포카리스웨트
    1 슈웹스 레몬토닉
    2 광동 옥수수수염차
    3 밀러
    4 꼬깔콘 고소한맛
    5 매운새우깡 
    6 TOP 심플리 스무스 스위트 아메리카노
    7 유동 번데기
    8 유동 자연산 골뱅이
    9 스팸
    10 참이슬 후레쉬
    11 몽쉘 오리지날 생크림 케이크
    12 바리스타룰스 로어슈거 에스프레소 라떼
    13 스텔라 아르투아
    14 하이네켄 다크비어
    15 빅파이 딸기
    16 촉촉한 초코칩
    17 진라면 매운맛 컵
    18 진라면 순한맛 컵
    19 열라면 컵
    20 웅진 하늘보리
    21 짜파게티 큰사발
    22 티오피 에스프레소
    23 허니버터칩
    24 오사쯔
    25 그린 자이언트 니블렛 스위트콘
    26 롯데 초코파이
    27 예감 오리지날
    28 너구리 큰사발면
    29 데자와 로얄 밀크티
    30 수미칩 오리지널
    31 밀키스
    32 코카콜라
    33 포카칩 어니언맛
    34 구운양파
    35 스파게티 컵
    36 하이네켄 데스페라도스 오리지널
    37 샘표 김치찌개전용 꽁치
    38 달고나 라떼
    39 신라면 큰사발면
    40 청정원 순창 초고추장
    41 뉴트리플랜 흰살참치와 멸치
    42 머거본 꿀땅콩
    43 미에로 화이바
    44 조지아 고티카 빈티지 라떼
    45 꼬북칩
    46 새우깡
    47 롯데 초코 빼빼로
    48 롯데 아몬드 빼빼로
    49 칭따오
    50 기네스 드레프트
    51 짱구
    52 태양의 맛 썬
    53 오뚜기 황도
    54 델몬트 후레쉬컷 슬라이스 파인애플
    55 콩카페 코코넛 라떼
    56 산미구엘 페일 필젠
    57 프로베스트 캣푸드 참치와 연어
    58 프로베스트 캣푸드 참치와 치어
    59 뉴트리플랜 흰살참치와 연어
    60 뉴트리플랜 참치와 통새우
    61 테라
    62 박카스 F
    63 필굿 세븐
    64 버드와이저
    65 빈츠
    66 타이거
    67 사리곰탕 큰사발
    68 삼양라면
    69 새우탕 큰사발
    70 스낵면 컵
    71 앵그리 짜파구리 큰사발
    72 큰컵 불닭볶음면
    73 튀김우동 컵
    74 청하
    75 호가든
    76 호가든 로제
    77 종가집 깔끔한 맛 종가집 김치
    78 동원 지중해 황도
    79 오랑지나
    80 바리스타룰스 마다가스카르 바닐라빈 라떼
    81 에델바이스
    82 카스
    83 구스 아일랜드 IPA
    84 데미소다 애플
    85 치토스 매콤달콤한맛
    86 육개장 큰사발
    87 하이네켄
    88 스프라이트
    89 참깨라면 용기
    90 오징어 짬뽕 큰사발
    91 진짬뽕 큰컵
    92 진로 소주
    93 나가사끼 짬뽕
    94 김치 큰사발면
    '''
    target_names = np.array(['동아 포카리스웨트', '슈웹스 레몬토닉', '광동 옥수수수염차', '밀러', '꼬깔콘 고소한맛', '매운새우깡',
                             'TOP 심플리 스무스 스위트 아메리카노', '유동 번데기', '유동 자연산 골뱅이', '스팸', '참이슬 후레쉬',
                             '몽쉘 오리지날 생크림 케이크', '바리스타룰스 로어슈거 에스프레소 라떼', '스텔라 아르투아', '하이네켄 다크비어',
                             '빅파이 딸기', '촉촉한 초코칩', '진라면 매운맛 컵', '진라면 순한맛 컵', '열라면 컵', '웅진 하늘보리',
                             '짜파게티 큰사발', '티오피 에스프레소', '허니버터칩', '오사쯔', '그린 자이언트 니블렛 스위트콘',
                             '롯데 초코파이', '예감 오리지날', '너구리 큰사발면', '데자와 로얄 밀크티', '수미칩 오리지널', '밀키스',
                             '코카콜라', '포카칩 어니언맛', '구운양파', '스파게티 컵', '하이네켄 데스페라도스 오리지널',
                             '샘표 김치찌개전용 꽁치', '달고나 라떼', '신라면 큰사발면', '청정원 순창 초고추장', '뉴트리플랜 흰살참치와 멸치',
                             '머거본 꿀땅콩', '미에로 화이바', '조지아 고티카 빈티지 라떼', '꼬북칩', '새우깡', '롯데 초코 빼빼로',
                             '롯데 아몬드 빼빼로', '칭따오', '기네스 드레프트', '짱구', '태양의 맛 썬', '오뚜기 황도',
                             '델몬트 후레쉬컷 슬라이스 파인애플', '콩카페 코코넛 라떼', '산미구엘 페일 필젠', '프로베스트 캣푸드 참치와 연어',
                             '프로베스트 캣푸드 참치와 치어', '뉴트리플랜 흰살참치와 연어', '뉴트리플랜 참치와 통새우', '테라', '박카스 F',
                             '필굿 세븐', '버드와이저', '빈츠', '타이거', '사리곰탕 큰사발', '삼양라면', '새우탕 큰사발', '스낵면 컵',
                             '앵그리 짜파구리 큰사발', '큰컵 불닭볶음면', '튀김우동 컵', '청하', '호가든', '호가든 로제',
                             '종가집 깔끔한 맛 종가집 김치', '동원 지중해 황도', '오랑지나', '바리스타룰스 마다가스카르 바닐라빈 라떼',
                             '에델바이스', '카스', '구스 아일랜드 IPA', '데미소다 애플', '치토스 매콤달콤한맛', '육개장 큰사발',
                             '하이네켄', '스프라이트', '참깨라면 용기', '오징어 짬뽕 큰사발', '진짬뽕 큰컵', '진로 소주', '나가사끼 짬뽕',
                             '김치 큰사발면'])


    result = np.argmax(model.predict(data))

    pred = model.predict(data)
    predict = np.max(model.predict(data))
    sort_predict = (-model.predict(data)).argsort()
    sort_predict = sort_predict.reshape(-1, )

    sort_value = np.sort(pred)
    sort_value = pred.reshape(-1, )

    predict_result = target_names[result]

    rank = []
    rank_value = []
    for i in sort_predict[::-1]:  # 내림차순
        rank.append(target_names[i])
        rank_value.append(round(sort_value[i] * 100, 2))

    tts = gTTS(text=predict_result, lang='ko')
    tts.save("media/result.mp3")

    return predict_result, predict, rank[-1], rank_value[-1]


